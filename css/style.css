/* use the universal selector to Normalize the css in order to make a cross browser reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}



body {

    /* the properties related to font are usually inherited */
    /* child element will inherite body's font setting */
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;

    /* padding will NOT inherited to child */
    padding: 30px;
}


.header {
    position: relative;
    height: 95vh;

    /* *** CSS中也可以直接加入图片 ***  */
    /* *** 颜色也可以作为background image ***，用逗号切分多个图片 */
    /* to right bottom 从右下方开始渐变色 */
    background-image:
        linear-gradient(to right bottom,
            rgba(126, 213, 111, 0.8),
            rgba(40, 180, 131, 0.8)),
        url(../img/hero.jpg);

    /* cover means whatever the *** WIDTH *** of the viewport or the element, it'll always try to fit the element inside of the box */
    background-size: cover;

    /* to ensure whatever the viewport size is that this top of the *** IMAGE *** here always stays at the top of the container. */
    /* *** 针对图片 *** 在网页放大缩小时图片显示位置的变化 viewport 变化的话，顶部还是保持在页面的顶部，页面的下部会随着vh的变化而变化 */
    background-position: top;

    /* **** 将div变成不规则的图形 **** */
    /* 坐标从 左上开始顺时针 到 右上，右下，最后左下 4个坐标 */
    /* 每个坐标设置 x y 轴方向，例如 polygon(x y, x y, x y, x y) */
    /* 如下 左上为div的初始点，设为 0 0。右上x轴移动到div的最后边，y轴保持不变，设为 100% 0*/
    /* 右下x轴为div的最后边，设为100%。 y轴要设置为不规则图形，高度减一半，设为50%，或特定像素px  */

    /* 也可以变为三角形，只设置 3个坐标点 例如 polygon(50% 0, 100% 100%, 0% 100%) */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}


.logo-box {
    /* logo-box的母element是 .header，只有将 .header 的position设为relative */
    /* logo-box的position: absolute才起作用 top和left这时才是对应母element作为参照*/
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    /* 浏览器会自动计算width以满足图片的要求 */
    /* 设置width的话，浏览器会自动计算height */
    height: 35px;
}

/* Animation can still happen when hover */
/* when hover on the .logo-box, ONLY .logo have hover effects. .logo-box will NOT have any hover effects. */
.logo-box:hover .logo {
    animation: moveInRight 1s ease-in;
}



.text-box {
    position: absolute;

    /* 在position为absolute的情况下，top left 各设置为 50% 是无法居中的 */
    /* 因为没有计算该element占用的空间 */
    /* 使用transform则可以将element的占用空间计算进去，从而达到居中的效果 */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: white;
    text-transform: uppercase;

    /* solve a problem when animation finished, the animation object may have a little bit(1 or 2px) shaking */
    backface-visibility: hidden;

    margin-bottom: 60px;
}


.heading-primary-main {
    /* 这个class为span，将其设为block element 能够占用全部width，这样就能更好的调整位置 */
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    margin-right: -35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* make the animation repeat 3 times
    animation-iteration-count: 3; */

    /* delay 3s to start the animation
    animation-delay: 3s; */

}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    margin-right: -17.4px;

    /* short hand writting */
    /* same as 
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
    animation: moveInRight 1s ease-out;
}


/* Animation for H1 */
/*  For the browser performance, it's best to only ever animate two different properties. */
/* 0% is the initial state, 100% is final state */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}


@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}


.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

/* active is when click the button, the active effect starts */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}